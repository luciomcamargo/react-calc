{"map":"{\"version\":3,\"sources\":[\"C:\\\\react-calc\\\\src\\\\components\\\\Button.jsx\",\"C:\\\\react-calc\\\\src\\\\components\\\\Input.jsx\",\"C:\\\\react-calc\\\\src\\\\components\\\\ClearButton.jsx\",\"C:\\\\react-calc\\\\src\\\\App.jsx\",\"C:\\\\react-calc\\\\src\\\\serviceWorker.js\",\"C:\\\\react-calc\\\\src\\\\index.js\"],\"names\":[\"Button\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"concat\",\"val\",\"children\",\"isNaN\",\"onClick\",\"handleClick\",\"Input\",\"input\",\"ClearButton\",\"handleClear\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"addToInput\",\"state\",\"length\",\"setState\",\"handleX\",\"handleEqual\",\"math\",\"_this2\",\"Input_Input\",\"Button_Button\",\"ClearButton_ClearButton\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\r\\nimport \\\"./Button.css\\\";\\r\\n\\r\\nconst isOperator = val => {\\r\\n  return !isNaN(val) || val === \\\".\\\" || val === \\\"=\\\";\\r\\n};\\r\\n\\r\\nexport const Button = props => (\\r\\n  <div\\r\\n    className={`button-wrapper ${\\r\\n      isOperator(props.children) ? null : \\\"operator\\\"\\r\\n    }`}\\r\\n    onClick={() => props.handleClick(props.children)}\\r\\n  >\\r\\n    {props.children}\\r\\n  </div>\\r\\n);\\r\\n\",\"import React from \\\"react\\\";\\r\\nimport \\\"./Input.css\\\";\\r\\n\\r\\nexport const Input = props => <div className=\\\"input\\\">{props.input}</div>;\\r\\n\",\"import React from \\\"react\\\";\\r\\nimport \\\"./ClearButton.css\\\";\\r\\n\\r\\nexport const ClearButton = props => (\\r\\n  <div className=\\\"clear-btn\\\" onClick={props.handleClear}>\\r\\n    {props.children}\\r\\n  </div>\\r\\n);\\r\\n\",\"import React, { Component } from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport { Button } from \\\"./components/Button\\\";\\nimport { Input } from \\\"./components/Input\\\";\\nimport { ClearButton } from \\\"./components/ClearButton\\\";\\nimport * as math from \\\"mathjs\\\";\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      input: \\\"\\\"\\n    };\\n  }\\n\\n  addToInput = val => {\\n    if (isNaN(val) && isNaN(this.state.input[this.state.input.length - 1])) {\\n      this.setState({ input: this.state.input });\\n    } else {\\n      this.setState({ input: this.state.input + val });\\n    }\\n  };\\n\\n  handleX = val => {\\n    if (isNaN(val) && isNaN(this.state.input[this.state.input.length - 1])) {\\n      this.setState({ input: this.state.input });\\n    } else {\\n      this.setState({ input: this.state.input + \\\"*\\\" });\\n    }\\n  };\\n  handleEqual = () => {\\n    if (isNaN(this.state.input[this.state.input.length - 1])) {\\n      this.setState({ input: this.state.input });\\n    } else {\\n      this.setState({ input: math.eval(this.state.input) });\\n    }\\n  };\\n\\n  render() {\\n    return (\\n      <div className=\\\"app\\\">\\n        <div className=\\\"calc-wrapper\\\">\\n          <Input input={this.state.input} />\\n          <div className=\\\"row\\\">\\n            <Button handleClick={this.addToInput}>7</Button>\\n            <Button handleClick={this.addToInput}>8</Button>\\n            <Button handleClick={this.addToInput}>9</Button>\\n            <Button handleClick={this.addToInput}>/</Button>\\n          </div>\\n          <div className=\\\"row\\\">\\n            <Button handleClick={this.addToInput}>4</Button>\\n            <Button handleClick={this.addToInput}>5</Button>\\n            <Button handleClick={this.addToInput}>6</Button>\\n            <Button handleClick={() => this.handleX()}>X</Button>\\n          </div>\\n          <div className=\\\"row\\\">\\n            <Button handleClick={this.addToInput}>1</Button>\\n            <Button handleClick={this.addToInput}>2</Button>\\n            <Button handleClick={this.addToInput}>3</Button>\\n            <Button handleClick={this.addToInput}>+</Button>\\n          </div>\\n          <div className=\\\"row\\\">\\n            <Button handleClick={this.addToInput}>.</Button>\\n            <Button handleClick={this.addToInput}>0</Button>\\n            <Button handleClick={() => this.handleEqual()}>=</Button>\\n            <Button handleClick={this.addToInput}>-</Button>\\n          </div>\\n          <div className=\\\"row\\\">\\n            <ClearButton handleClear={() => this.setState({ input: \\\"\\\" })}>\\n              Clear\\n            </ClearButton>\\n          </div>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{161:function(e,t,a){e.exports=a(599)},166:function(e,t,a){},168:function(e,t,a){},170:function(e,t,a){},172:function(e,t,a){},174:function(e,t,a){},599:function(e,t,a){\"use strict\";a.r(t);var n=a(5),i=a.n(n),l=a(154),c=a.n(l),r=(a(166),a(155)),u=a(156),s=a(159),d=a(157),o=a(160),h=(a(168),a(170),function(e){return i.a.createElement(\"div\",{className:\"button-wrapper \".concat((t=e.children,isNaN(t)&&\".\"!==t&&\"=\"!==t?\"operator\":null)),onClick:function(){return e.handleClick(e.children)}},e.children);var t}),p=(a(172),function(e){return i.a.createElement(\"div\",{className:\"input\"},e.input)}),m=(a(174),function(e){return i.a.createElement(\"div\",{className:\"clear-btn\",onClick:e.handleClear},e.children)}),E=a(158),k=function(e){function t(e){var a;return Object(r.a)(this,t),(a=Object(s.a)(this,Object(d.a)(t).call(this,e))).addToInput=function(e){isNaN(e)&&isNaN(a.state.input[a.state.input.length-1])?a.setState({input:a.state.input}):a.setState({input:a.state.input+e})},a.handleX=function(e){isNaN(e)&&isNaN(a.state.input[a.state.input.length-1])?a.setState({input:a.state.input}):a.setState({input:a.state.input+\"*\"})},a.handleEqual=function(){isNaN(a.state.input[a.state.input.length-1])?a.setState({input:a.state.input}):a.setState({input:E.eval(a.state.input)})},a.state={input:\"\"},a}return Object(o.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){var e=this;return i.a.createElement(\"div\",{className:\"app\"},i.a.createElement(\"div\",{className:\"calc-wrapper\"},i.a.createElement(p,{input:this.state.input}),i.a.createElement(\"div\",{className:\"row\"},i.a.createElement(h,{handleClick:this.addToInput},\"7\"),i.a.createElement(h,{handleClick:this.addToInput},\"8\"),i.a.createElement(h,{handleClick:this.addToInput},\"9\"),i.a.createElement(h,{handleClick:this.addToInput},\"/\")),i.a.createElement(\"div\",{className:\"row\"},i.a.createElement(h,{handleClick:this.addToInput},\"4\"),i.a.createElement(h,{handleClick:this.addToInput},\"5\"),i.a.createElement(h,{handleClick:this.addToInput},\"6\"),i.a.createElement(h,{handleClick:function(){return e.handleX()}},\"X\")),i.a.createElement(\"div\",{className:\"row\"},i.a.createElement(h,{handleClick:this.addToInput},\"1\"),i.a.createElement(h,{handleClick:this.addToInput},\"2\"),i.a.createElement(h,{handleClick:this.addToInput},\"3\"),i.a.createElement(h,{handleClick:this.addToInput},\"+\")),i.a.createElement(\"div\",{className:\"row\"},i.a.createElement(h,{handleClick:this.addToInput},\".\"),i.a.createElement(h,{handleClick:this.addToInput},\"0\"),i.a.createElement(h,{handleClick:function(){return e.handleEqual()}},\"=\"),i.a.createElement(h,{handleClick:this.addToInput},\"-\")),i.a.createElement(\"div\",{className:\"row\"},i.a.createElement(m,{handleClear:function(){return e.setState({input:\"\"})}},\"Clear\"))))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(i.a.createElement(k,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[161,2,1]]]);","extractedComments":[]}